// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(uuid())
  email        String   @unique
  firstName    String   @db.VarChar(50)
  lastName     String?  @db.VarChar(50)
  password     String
  role         UserRole @default(USER)
  credits      Int      @default(0)
  refreshToken String?
  isVerified   Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  agents Agent[]

  @@map("users")
}

enum UserRole {
  ADMIN
  USER
}

enum AgentRole {
  ASSISTANT
  FRIEND
  GIRLFRIEND
  BOYFRIEND
  HUSBAND
  WIFE
}

enum AgentStatus {
  IDLE
  PROCESSING
  ERROR
}

model Agent {
  id          String      @id
  name        String      @db.VarChar(100)
  language    String      @db.VarChar(100)
  avatar      String?     @db.Text
  personality String[]    @db.Text
  role        AgentRole?
  prompt      String?     @db.Text
  status      AgentStatus @default(IDLE)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  messages Message[]

  @@map("agents")
}

enum MessageDirection {
  USER
  AGENT
}

enum MessageStatus {
  SENT
  READ
  ERROR
}

model Message {
  id        String           @id @default(uuid())
  body      String           @db.Text
  from      MessageDirection
  status    MessageStatus
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt

  agent   Agent  @relation(fields: [agentId], references: [id], onDelete: Cascade)
  agentId String

  @@map("messages")
}
